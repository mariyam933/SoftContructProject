
import java.awt.Image;
import java.util.ArrayList;

import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 * The `RecieptFrame` class represents a GUI frame displaying the receipt of a customer's order.
 * It includes details such as the products purchased, quantities, prices, and the grand total.
 * Users can go back to the previous frame or print the receipt.
 */

public class RecieptFrame extends javax.swing.JFrame {

    customer cs = null;

    /**
     * Creates a new instance of the `RecieptFrame` with the specified customer.
     *
     * @param cs The customer associated with the receipt frame.
     */
    public RecieptFrame(customer cs) {
        this.cs = cs;
        initComponents();
        ImageIcon background_img = new ImageIcon(
                "C:\\Users\\DELL\\Desktop\\Grocery_Management_System_Java\\SMMS_Images\\ReceiptFrame.jpeg", "");
        Image img = background_img.getImage();
        Image temp_img = img.getScaledInstance(877, 584, Image.SCALE_SMOOTH);
        background_img = new ImageIcon(temp_img);
        JLabel backgrnd = new JLabel("", background_img, JLabel.CENTER);
        backgrnd.setBounds(0, 0, 877, 584);
        this.add(backgrnd);
        this.setTitle("Receipt");
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setLocationRelativeTo(null);

        backBtn.setOpaque(true);
        receiptPrintBtn.setOpaque(true);
        String[] col = { "ID", "Name", "Quantity", "Price" };
        ArrayList<order> orders = cs.getOrders();
        DefaultTableModel tableModel = new DefaultTableModel(null, col);
        productsTable.setModel(tableModel);
        productsTable.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        TableColumnModel colModel = productsTable.getColumnModel();
        colModel.getColumn(0).setPreferredWidth(30);
        colModel.getColumn(1).setPreferredWidth(450);
        colModel.getColumn(2).setPreferredWidth(30);
        colModel.getColumn(3).setPreferredWidth(80);
        DefaultCellEditor editor = (DefaultCellEditor) productsTable.getDefaultEditor(Object.class);
        editor.setClickCountToStart(20);
        productsTable.setRowSelectionAllowed(true);
        double count = 0;
        for (int i = 0; i < orders.size(); i++) {

            if (orders.get(i).getType().equals("curr")) {
                int ID = orders.get(i).getID();
                int qty = orders.get(i).getQuantity();
                double price = orders.get(i).getTotalPrice();
                price = price * qty;
                count += price;
                String data[] = { String.valueOf(ID), orders.get(i).getName(), String.valueOf(qty),
                        String.valueOf(price) };
                tableModel.addRow(data);

            }

        }
        grandTotalLabel.setText("" + count);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        receiptPrintBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        grandTotalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Hubballi", 1, 32)); // NOI18N
        jLabel1.setText("Grab & Go SuperMarket");

        productsTable.setBackground(new java.awt.Color(204, 204, 204));
        productsTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        productsTable.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        productsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "ID", "Name", "Quantity", "Price"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(productsTable);

        backBtn.setBackground(new java.awt.Color(255, 102, 102));
        backBtn.setFont(new java.awt.Font("Hoefler Text", 1, 26)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        receiptPrintBtn.setBackground(new java.awt.Color(255, 102, 102));
        receiptPrintBtn.setFont(new java.awt.Font("Hoefler Text", 1, 26)); // NOI18N
        receiptPrintBtn.setText("Print Receipt");
        receiptPrintBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        receiptPrintBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        receiptPrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptPrintBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hubballi", 1, 26)); // NOI18N
        jLabel2.setText("Grand Total:");

        grandTotalLabel.setFont(new java.awt.Font("Hubballi", 1, 26)); // NOI18N
        grandTotalLabel.setText("800");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(290, 290, 290)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 324,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(124, 124, 124)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 647,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(72, 72, 72)
                                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(319, 319, 319)
                                                .addComponent(jLabel2)
                                                .addGap(35, 35, 35)
                                                .addComponent(grandTotalLabel)))
                                .addContainerGap(106, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(651, Short.MAX_VALUE)
                                        .addComponent(receiptPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel1)
                                .addGap(52, 52, 52)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(grandTotalLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41,
                                        Short.MAX_VALUE)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(477, Short.MAX_VALUE)
                                        .addComponent(receiptPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(64, 64, 64))));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the action when the "Back" button is clicked.
     *
     * @param evt The ActionEvent representing the button click.
     */
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<order> ors = cs.getOrders();
        for (int i = 0; i < ors.size(); i++) {
            order or = new order(ors.get(i).getID(), ors.get(i).getName(), ors.get(i).getQuantity(),
                    ors.get(i).getTotalPrice(), "prev");
            ors.remove(ors.get(i));
            ors.add(or);
        }
        this.setVisible(false);
    }// GEN-LAST:event_backBtnActionPerformed

     /**
     * Handles the action when the "Print Receipt" button is clicked.
     *
     * @param evt The ActionEvent representing the button click.
     */
    private void receiptPrintBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_receiptPrintBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<order> ors = cs.getOrders();
        for (int i = 0; i < ors.size(); i++) {
            order or = new order(ors.get(i).getID(), ors.get(i).getName(), ors.get(i).getQuantity(),
                    ors.get(i).getTotalPrice(), "prev");
            ors.remove(ors.get(i));
            ors.add(or);
        }
        JOptionPane.showMessageDialog(this, "Receipt Printed Successfully! ", "ALERT", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);

    }// GEN-LAST:event_receiptPrintBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel grandTotalLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productsTable;
    private javax.swing.JButton receiptPrintBtn;
    // End of variables declaration//GEN-END:variables
}
