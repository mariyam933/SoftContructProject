
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;

import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

public class RecieptFrame extends javax.swing.JFrame {

    Customer cs = null;

    /**
     * Creates new form RecieptFrame
     */
    public RecieptFrame(Customer cs) {
        this.cs = cs;
        initComponents();
        ImageIcon background_img = new ImageIcon(
                "C:/Users/MINAHIL SHAKOOR/Downloads/Grocery_Management_System_Java/SMMS_Images/SMMS_Images/ProductsFrame.png", "");
        Image img = background_img.getImage();
        Image temp_img = img.getScaledInstance(1300, 750, Image.SCALE_SMOOTH);
        background_img = new ImageIcon(temp_img);
        JLabel backgrnd = new JLabel("", background_img, JLabel.CENTER);
        backgrnd.setBounds(0, 0, 1300, 750);
        this.add(backgrnd);
        this.setTitle("Receipt");
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setLocationRelativeTo(null);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize.width, screenSize.height);
        setLocation(0, 0);

        backBtn.setOpaque(true);
        receiptPrintBtn.setOpaque(true);
        String[] col = { "ID", "Name", "Quantity", "Price" };
        ArrayList<Order> orders = cs.getOrders();
        DefaultTableModel tableModel = new DefaultTableModel(null, col);
        productsTable.setModel(tableModel);
        productsTable.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        TableColumnModel colModel = productsTable.getColumnModel();
        colModel.getColumn(0).setPreferredWidth(30);
        colModel.getColumn(1).setPreferredWidth(450);
        colModel.getColumn(2).setPreferredWidth(30);
        colModel.getColumn(3).setPreferredWidth(80);
        DefaultCellEditor editor = (DefaultCellEditor) productsTable.getDefaultEditor(Object.class);
        editor.setClickCountToStart(20);
        productsTable.setRowSelectionAllowed(true);
        double count = 0;
        for (int i = 0; i < orders.size(); i++) {

            if (orders.get(i).getType().equals("curr")) {
                int ID = orders.get(i).getID();
                int qty = orders.get(i).getQuantity();
                double price = orders.get(i).getTotalPrice();
                price = price * qty;
                count += price;
                String data[] = { String.valueOf(ID), orders.get(i).getName(), String.valueOf(qty),
                        String.valueOf(price) };
                tableModel.addRow(data);

            }

        }
        priceLabel.setText("" + count);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        receiptPrintBtn = new javax.swing.JButton();
        grandTotalLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headingLabel.setFont(new java.awt.Font("Hubballi", 1, 32)); // NOI18N
        headingLabel.setText("Grab & Go SuperMarket");

        productsTable.setBackground(new java.awt.Color(204, 204, 204));
        productsTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        productsTable.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productsTable);

        backBtn.setBackground(new java.awt.Color(255, 128, 112));
        backBtn.setFont(new java.awt.Font("Hoefler Text", 1, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        receiptPrintBtn.setBackground(new java.awt.Color(255, 128, 112));
        receiptPrintBtn.setFont(new java.awt.Font("Hoefler Text", 1, 14)); // NOI18N
        receiptPrintBtn.setText("Print Receipt");
        receiptPrintBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        receiptPrintBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        receiptPrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptPrintBtnActionPerformed(evt);
            }
        });

        grandTotalLabel.setFont(new java.awt.Font("Hubballi", 1, 26)); // NOI18N
        grandTotalLabel.setText("Grand Total:");

        priceLabel.setFont(new java.awt.Font("Hubballi", 1, 26)); // NOI18N
        priceLabel.setText("800");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(291, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(416, 416, 416))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(grandTotalLabel)
                                .addGap(35, 35, 35)
                                .addComponent(priceLabel)
                                .addGap(141, 141, 141)
                                .addComponent(receiptPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(216, 216, 216))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(headingLabel)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(receiptPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(grandTotalLabel)
                        .addComponent(priceLabel)))
                .addGap(99, 99, 99))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Order> ors = cs.getOrders();
        for (int i = 0; i < ors.size(); i++) {
            Order or = new Order(ors.get(i).getID(), ors.get(i).getName(), ors.get(i).getQuantity(),
                    ors.get(i).getTotalPrice(), "prev");
            ors.remove(ors.get(i));
            ors.add(or);
        }
        this.setVisible(false);
    }// GEN-LAST:event_backBtnActionPerformed

    private void receiptPrintBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_receiptPrintBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Order> ors = cs.getOrders();
        for (int i = 0; i < ors.size(); i++) {
            Order or = new Order(ors.get(i).getID(), ors.get(i).getName(), ors.get(i).getQuantity(),
                    ors.get(i).getTotalPrice(), "prev");
            ors.remove(ors.get(i));
            ors.add(or);
        }
        JOptionPane.showMessageDialog(this, "Receipt Printed Successfully! ", "ALERT", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);

    }// GEN-LAST:event_receiptPrintBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel grandTotalLabel;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTable productsTable;
    private javax.swing.JButton receiptPrintBtn;
    // End of variables declaration//GEN-END:variables
}
